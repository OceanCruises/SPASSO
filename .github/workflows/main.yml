name: Run code on multiple OS (Linux, macOS, Windows)

on:
  push:
    branches: [ main ]

jobs:
  Run-on-Ubuntu:
    name: Run code on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libhdf5-dev hdf5-tools libnetcdf-dev netcdf-bin

      - name: Install numpy first
        run: pip install --upgrade pip setuptools wheel numpy

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # üîç Show directory structure
      - name: Show Directory Structure
        run: pwd && ls -R

      # üîç Ensure script is executable
      - name: Ensure script is executable
        run: chmod +x ./src/Spasso.py

      # üîç Show Python path
      - name: Debug PYTHONPATH
        run: echo $PYTHONPATH

      # ‚úÖ Run with verbose debugging
      - name: Debug Execution
        run: set -x && cd src && python -X dev -u Spasso.py WMedSeaExample

  Run-on-macOS:
    name: Run code on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      # ‚úÖ Install system dependencies using Homebrew
      - name: Install system dependencies (HDF5 & NetCDF)
        run: |
          brew install hdf5 netcdf

      # ‚úÖ Set up Conda for package management
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.11"
          channels: conda-forge
          activate-environment: test-env

      # ‚úÖ Install necessary libraries with Conda
      - name: Install dependencies via Conda
        shell: bash -l {0}
        run: |
          conda install -y -c conda-forge hdf5 netcdf4 cython numpy

      # ‚úÖ Upgrade pip & setuptools
      - name: Upgrade Pip and Setuptools
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip setuptools wheel

      # ‚úÖ Install Python dependencies
      - name: Install Python dependencies
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt --no-cache-dir

      # ‚úÖ Verify Installed Libraries
      - name: Verify Installed Libraries
        shell: bash -l {0}
        run: |
          python -c "import netCDF4; print('netCDF4 installed successfully')"

      # ‚úÖ Run the code
      - name: Run script
        shell: bash -l {0}
        run: |
          cd src
          python -X dev -u Spasso.py WMedSeaExample

  Run-on-Windows:
    name: Run code on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      # ‚úÖ Install Chocolatey packages for HDF5 & NetCDF
      - name: Install Chocolatey Packages
        run: |
          choco install -y hdf5 netcdf

      # ‚úÖ Set up Miniconda for package management
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.11"
          channels: conda-forge
          activate-environment: test-env

      # ‚úÖ Install dependencies using Conda
      - name: Install dependencies via Conda
        shell: cmd /C CALL
        run: |
          conda install -y -c conda-forge hdf5 netcdf4 cython numpy

      # ‚úÖ Upgrade Pip and Setuptools
      - name: Upgrade Pip and Setuptools
        shell: cmd /C CALL
        run: |
          python -m pip install --upgrade pip setuptools wheel

      # ‚úÖ Install Python dependencies
      - name: Install Python dependencies
        shell: cmd /C CALL
        run: |
          pip install -r requirements.txt --no-cache-dir

      # ‚úÖ Verify Installed Libraries
      - name: Verify Installed Libraries
        shell: cmd /C CALL
        run: |
          python -c "import netCDF4; print('netCDF4 installed successfully')"

      # ‚úÖ Run the code
      - name: Run script
        shell: cmd /C CALL
        run: |
          cd src
          python -X dev -u Spasso.py WMedSeaExample
